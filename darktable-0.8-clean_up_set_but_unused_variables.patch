diff --git a/src/common/imageio_dng.h b/src/common/imageio_dng.h
index f14ce79..a5e7d04 100644
--- a/src/common/imageio_dng.h
+++ b/src/common/imageio_dng.h
@@ -218,6 +218,8 @@ dt_imageio_write_dng(const char *filename, const float *const pixel, const int w
   {
     dt_imageio_dng_write_tiff_header(f, wd, ht, 1.0f/100.0f, 1.0f/4.0f, 50.0f, 100.0f, filter);
     k = fwrite(pixel, sizeof(float), wd*ht, f);
+    if (k != wd*ht)
+        fprintf(stderr, "[dng_write] Error writing image data to %s\n", filename);
     fclose(f);
     if(exif) dt_exif_write_blob(exif,exif_len,filename);
   }
diff --git a/src/control/jobs/control_jobs.c b/src/control/jobs/control_jobs.c
index c8b1508..ea71f75 100644
--- a/src/control/jobs/control_jobs.c
+++ b/src/control/jobs/control_jobs.c
@@ -451,7 +451,9 @@ int32_t dt_control_export_job_run(dt_job_t *job)
   // limit this to num threads = num full buffers - 1 (keep one for darkroom mode)
   // use min of user request and mipmap cache entries
   const int full_entries = dt_conf_get_int ("mipmap_cache_full_images");
-  const int num_threads = MAX(1, MIN(full_entries, darktable.mipmap_cache->num_entries[DT_IMAGE_FULL]) - 1);
+  // GCC won't accept that this variable is used in a macro, considers
+  // it set but not used, which makes for instance Fedora break.
+  const __attribute__((__unused__)) int num_threads = MAX(1, MIN(full_entries, darktable.mipmap_cache->num_entries[DT_IMAGE_FULL]) - 1);
 #pragma omp parallel default(none) private(imgid, size) shared(j, fraction, stderr, w, h, mformat, mstorage, t, sdata, job) num_threads(num_threads)
   {
 #endif
diff --git a/src/develop/develop.c b/src/develop/develop.c
index f81eafd..0941b48 100644
--- a/src/develop/develop.c
+++ b/src/develop/develop.c
@@ -368,7 +368,7 @@ void dt_dev_process_image_job(dt_develop_t *dev)
 
   dt_dev_zoom_t zoom;
   float zoom_x, zoom_y, scale;
-  int closeup, x, y;
+  int x, y;
 
   // printf("process: %d %d -> %d %d scale %f\n", x, y, dev->capwidth, dev->capheight, scale);
   // adjust pipeline according to changed flag set by {add,pop}_history_item.
@@ -383,7 +383,6 @@ restart:
   dt_dev_pixelpipe_change(dev->pipe, dev);
   // determine scale according to new dimensions
   DT_CTL_GET_GLOBAL(zoom, dev_zoom);
-  DT_CTL_GET_GLOBAL(closeup, dev_closeup);
   DT_CTL_GET_GLOBAL(zoom_x, dev_zoom_x);
   DT_CTL_GET_GLOBAL(zoom_y, dev_zoom_y);
 
diff --git a/src/iop/cacorrect.c b/src/iop/cacorrect.c
index de9784d..be4f783 100644
--- a/src/iop/cacorrect.c
+++ b/src/iop/cacorrect.c
@@ -224,8 +224,6 @@ CA_correct(struct dt_iop_module_t *self, dt_dev_pixelpipe_iop_t *piece, const fl
   int areawt[2][3];
   //direction of the CA shift in a tile
   int GRBdir[2][3];
-  //offset data of the plaquette where the optical R/B data are sampled
-  int offset[2][3];
   int	shifthfloor[3], shiftvfloor[3], shifthceil[3], shiftvceil[3];
   //number of tiles in the image
   int vblsz, hblsz, vblock, hblock, vz1, hz1;
@@ -603,10 +601,6 @@ CA_correct(struct dt_iop_module_t *self, dt_dev_pixelpipe_iop_t *piece, const fl
             //data structure = CAshift[vert/hor][color]
             //j=0=vert, 1=hor
 
-
-            offset[j][c]=floor(CAshift[j][c]);
-            //offset gives NW corner of square containing the min; j=0=vert, 1=hor
-
             if (fabs(CAshift[j][c])<2.0)
             {
               blockave[j][c] += CAshift[j][c];
diff --git a/src/views/capture.c b/src/views/capture.c
index 61b580c..aa164a7 100644
--- a/src/views/capture.c
+++ b/src/views/capture.c
@@ -277,8 +277,6 @@ void _expose_tethered_mode(dt_view_t *self, cairo_t *cr, int32_t width, int32_t
 {
   dt_capture_t *lib=(dt_capture_t*)self->data;
   lib->image_over = DT_VIEW_DESERT;
-  int32_t mouse_over_id;
-  DT_CTL_GET_GLOBAL(mouse_over_id, lib_image_mouse_over_id);
   lib->image_id=dt_view_film_strip_get_active_image(darktable.view_manager);
 
   // First of all draw image if availble
diff --git a/src/views/darkroom.c b/src/views/darkroom.c
index 818efb4..4fd51e1 100644
--- a/src/views/darkroom.c
+++ b/src/views/darkroom.c
@@ -1036,12 +1036,11 @@ void border_scrolled(dt_view_t *view, double x, double y, int which, int up)
   dt_develop_t *dev = (dt_develop_t *)view->data;
   dt_dev_zoom_t zoom;
   int closeup;
-  float zoom_x, zoom_y, scale;
+  float zoom_x, zoom_y;
   DT_CTL_GET_GLOBAL(zoom, dev_zoom);
   DT_CTL_GET_GLOBAL(closeup, dev_closeup);
   DT_CTL_GET_GLOBAL(zoom_x, dev_zoom_x);
   DT_CTL_GET_GLOBAL(zoom_y, dev_zoom_y);
-  DT_CTL_GET_GLOBAL(scale, dev_zoom_scale);
   if(which > 1)
   {
     if(up) zoom_x -= 0.02;
